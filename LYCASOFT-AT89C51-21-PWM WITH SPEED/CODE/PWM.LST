C51 COMPILER V9.53.0.0   PWM                                                               12/29/2018 16:32:24 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE PWM
OBJECT MODULE PLACED IN PWM.OBJ
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE PWM.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include<reg51.h>
   2          #include "8051_delay.h"
   3          
   4          sbit PWM_Pin = P2^0;
   5          
   6          unsigned char PWM = 0;    // It can have a value from 0 (0% duty cycle) to 255 (100% duty cycle)
   7          unsigned int temp = 0;
   8           
   9          #define PWM_Freq_Num 1   // Highest possible PWM Frequency
  10          
  11          /*  
  12           *  So, in general you can calculate PWM frequency by using the formula
  13           *     PWM Frequency = 1000000/(PWM_Freq_Num*255)
  14           */
  15           
  16          void InitTimer0(void)
  17          {
  18   1        TMOD &= 0xF0;    // Clear 4bit field for timer0
  19   1        TMOD |= 0x01;    // Set timer0 in mode 1 = 16bit mode
  20   1      
  21   1        TH0 = 0x00;      // First time value
  22   1        TL0 = 0x00;      // Set arbitrarily zero
  23   1      
  24   1        ET0 = 1;         // Enable Timer0 interrupts
  25   1        EA  = 1;         // Global interrupt enable
  26   1      
  27   1        TR0 = 1;         // Start Timer 0
  28   1      }
  29          
  30          void Timer0_ISR (void) interrupt 1   
  31          {
  32   1        TR0 = 0;    // Stop Timer 0
  33   1       
  34   1        if(PWM_Pin) // if PWM_Pin is high
  35   1        {
  36   2          PWM_Pin = 0;
  37   2          temp = (255-PWM)*PWM_Freq_Num;
  38   2          TH0  = 0xFF - (temp>>8)&0xFF;
  39   2          TL0  = 0xFF - temp&0xFF;  
  40   2        }
  41   1        else       // if PWM_Pin is low
  42   1        {
  43   2          PWM_Pin = 1;
  44   2          temp = PWM*PWM_Freq_Num;
  45   2          TH0  = 0xFF - (temp>>8)&0xFF;
  46   2          TL0  = 0xFF - temp&0xFF;
  47   2        }
  48   1       
  49   1        TF0 = 0;     // Clear the interrupt flag
  50   1        TR0 = 1;     // Start Timer 0
  51   1      }
  52          
  53          void main()
  54          {
  55   1        InitTimer0();
C51 COMPILER V9.53.0.0   PWM                                                               12/29/2018 16:32:24 PAGE 2   

  56   1       
  57   1         while(1)
  58   1         {
  59   2            int i;
  60   2            i++;
  61   2            delay(10);
  62   2            PWM = i;
  63   2            if(i>=255)
  64   2              i=0;
  65   2         }
  66   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    162    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      3       2
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
